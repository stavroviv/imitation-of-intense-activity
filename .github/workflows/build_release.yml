name: Build release

env:
  APP_NAME: D7.mvs

on:
  workflow_dispatch:

concurrency:
  group: "release-${{ github.ref }}"

permissions:
  contents: write

jobs:
  getReleaseInformation:
    name: Get release information
    runs-on: ubuntu-latest
    outputs:
      releaseTag: ${{ steps.getReleaseInfo.outputs.RELEASE_TAG }}
      releaseVersion: ${{ steps.getReleaseInfo.outputs.RELEASE_VERSION }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get release tag and version
        id: getReleaseInfo
        run: |
          BRANCH_NAME=${GITHUB_REF_NAME}
          echo "Current branch is $BRANCH_NAME"
          echo "$BRANCH_NAME" | grep -Eq "^release/[0-9]+\.[0-9]+$" || { 
            echo "❌ The branch name must be in the format release/number.number"
            echo "❌ Exiting..."
            exit 1;
          }
          echo "❌ ${{ github.sha }}"
          
          
          TAG=$(git describe --exact-match --tags "${{ github.sha }}" 2>/dev/null)
          echo "DEBUG: $TAG"
          if [ "$TAG" != "" ]; then
            echo "❌ The latest commit is already tagged with tag: $TAG. Exiting..."
            exit 1
          fi
          
          RELEASE_VERSION=$(echo "$BRANCH_NAME" | sed 's/^release\///')
          echo "Release version: $RELEASE_VERSION"
          
          TAGS=$(git tag -l "v$RELEASE_VERSION.*")
          echo "Found tags: $TAGS"
          
          LATEST_TAG=$(echo "$TAGS" | sed -E "s/v$RELEASE_VERSION\.([0-9]+)/\1/" | sort -n | tail -n 1)
          LATEST_TAG=${LATEST_TAG:-0} 
          
          NEXT_TAG=$((LATEST_TAG + 1))
          
          FULL_RELEASE_VERSION="release/$RELEASE_VERSION.$NEXT_TAG"
          echo "Full release version: $FULL_RELEASE_VERSION"
          
          NEXT_TAG="v$RELEASE_VERSION.$NEXT_TAG"
          echo "Release tag: $NEXT_TAG"
          
          echo "RELEASE_TAG=$NEXT_TAG" >> $GITHUB_OUTPUT
          echo "RELEASE_VERSION=$FULL_RELEASE_VERSION" >> $GITHUB_OUTPUT
  buildRelease:
    name: Build and deploy
    uses: ./.github/workflows/build_and_deploy.yml
    needs: getReleaseInformation
    with:
      releaseVersion:  ${{ needs.getReleaseInformation.outputs.releaseVersion }}
  setReleaseTag:
    runs-on: ubuntu-latest
    name: Push release tag to repository
    needs: [getReleaseInformation,buildRelease]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Push release tag
        run: |
          echo "Current branch is ${{ github.ref_name }}"
          
          RELEASE_TAG=${{ needs.getReleaseInformation.outputs.releaseTag }}
          echo "Received tag: $RELEASE_TAG"        
          
          git tag "$RELEASE_TAG"
          git push origin "$RELEASE_TAG"
